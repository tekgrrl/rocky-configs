[include fluidd.cfg]
[include sb2209.cfg]
[mcu]
## Had to use the 'by-path' device in this version of Pi OS
# serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.1:1.0
canbus_uuid: 88577f5f6e1e

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000                 #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

##  Connected to Driver0 (B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  ## set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop ## Sensorless Homing 23092024 - Mandy
position_min: 0

##  Uncomment for 350mm build
position_endstop: 340 # TODO
position_max: 350

## Sensorless Homing 23092024 - Mandy
homing_speed: 20   ## Note: Kapman's Basement Workshop said that 20 didn't work (used 40)
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
## Sensorless Homing 23092024 - Mandy
diag_pin: ^PG6
driver_SGTHRS: 86

##  Connected to Driver1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
## endstop_pin: ^PB13 # was ^PA2 (19012024)
endstop_pin: tmc2209_stepper_y:virtual_endstop ## Sensorless Homing 23092024 - Mandy
position_min: 0

##  Uncomment for 350mm build
position_endstop: 340 # TODO
position_max: 350

## Sensorless Homing 23092024 - Mandy
homing_speed: 20  ## Note: Kapman's Basement Workshop said that 20 didn't work (used 40)
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9
driver_SGTHRS: 75

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Driver2_1 Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation:400
##  In Z- Position
endstop_pin: probe:z_virtual_endstop
# endstop_pin: ^PA0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: -0.5

##  Uncomment below for 350mm build
position_max: 310 #TODO

position_min: -10
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In Driver3 Position
##  Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PG4
dir_pin: PC1 ## For some reason this was inverted so I left it the same with the new pin (Mandy 20241002)
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation:400

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In Driver4 Position
##  Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation:400

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In Driver5 Position
##  Z3 Stepper - Front Right
[stepper_z3]
step_pin: PC13
dir_pin: PF0 ## For some reason this was inverted so I left it the same with the new pin (Mandy 20241002)
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation:400

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################
##  SSR Pin - In BED OUT position
[heater_bed]
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
# sensor_type: Generic 3950 # set by mandy originally
sensor_type: NTC 100K MGB18-104F39050L32

##--------------------------------------------------------------------
##  Select the option that matches your board
#sensor_pin: PC3 # Spider 1.0 & 1.1
# sensor_pin: PB0 # Spider 2.2
sensor_pin: PF3 # Octopus 1.1
##--------------------------------------------------------------------

##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

##  This probe is not used for Z height, only Quad Gantry Leveling
##  In Z+ position
[probe]
# ##  If your probe is NO instead of NC, change pin to ^!PA3
#pin: ^!PA3
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0
z_offset: 10
# speed: 10.0
# samples: 3
# samples_result: median
# sample_retract_dist: 3.0
# samples_tolerance: 0.006
# samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[safe_z_home]
home_xy_position: 175,175
speed: 50
z_hop: 5

    ##  Controller fan - FAN2 Connector
[heater_fan controller_fan]
pin: PD12
#kick_start_time: 0.5
heater: heater_bed
heater_temp: 50.0

#####################################################################
#   Temperatures
#####################################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100
