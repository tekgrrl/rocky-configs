[include fluidd.cfg]
## [include sb2209.cfg]
[mcu]
## Had to use the 'by-path' device in this version of Pi OS
# serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.1:1.0
canbus_uuid: 88577f5f6e1e

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000                 #Max 4000
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V TODO
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

##  Connected to Driver0 (B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  ## set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop ## Sensorless Homing 23092024 - Mandy
position_min: 0

##  Uncomment for 350mm build
position_endstop: 350 # TODO
position_max: 350

## Sensorless Homing 23092024 - Mandy
homing_speed: 20   ## Note: Kapman's Basement Workshop said that 20 didn't work (used 40)
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
## Sensorless Homing 23092024 - Mandy
diag_pin: ^PG6
driver_SGTHRS: 76 # max (stalls immediately at 86) = 85 min (bumps noticeably) = 60

##  Connected to Driver1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: !PG9 # was ^PA2 (19012024)
## endstop_pin: tmc2209_stepper_y:virtual_endstop ## Sensorless Homing 23092024 - Mandy
position_min: 0

##  Uncomment for 350mm build
position_endstop: 350 # TODO
position_max: 350

## Sensorless Homing 23092024 - Mandy
homing_speed: 20  ## Note: Kapman's Basement Workshop said that 20 didn't work (used 40)
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
## diag_pin: ^PG9
## driver_SGTHRS: 79 # max = 87 min = 70

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Driver2_1 Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation:400
##  In Z- Position
endstop_pin: probe:z_virtual_endstop
# endstop_pin: ^PA0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: -0.5

##  Uncomment below for 350mm build
position_max: 350 #TODO

position_min: -10
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In Driver3 Position
##  Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PG4
dir_pin: PC1 ## For some reason this was inverted so I left it the same with the new pin (Mandy 20241002)
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation:400

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In Driver4 Position
##  Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation:400

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In Driver5 Position
##  Z3 Stepper - Front Right
[stepper_z3]
step_pin: PC13
dir_pin: PF0 ## For some reason this was inverted so I left it the same with the new pin (Mandy 20241002)
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation:400

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################
##  SSR Pin - In BED OUT position
[heater_bed]
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
# sensor_type: Generic 3950 # set by mandy originally
sensor_type: NTC 100K MGB18-104F39050L32

##--------------------------------------------------------------------
##  Select the option that matches your board
#sensor_pin: PC3 # Spider 1.0 & 1.1
# sensor_pin: PB0 # Spider 2.2
sensor_pin: PF3 # Octopus 1.1
##--------------------------------------------------------------------

##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

##  Gantry Corners for 250mm Plate on Rocky (mandy 1/2/24)
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,65
   50,320
   320,320
   300,65

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.01 # was 0.0075
max_adjust: 10

    ##  Controller fan - FAN2 Connector
[heater_fan controller_fan]
pin: PD12
#kick_start_time: 0.5
heater: heater_bed
heater_temp: 50.0

#####################################################################
#   Temperatures
#####################################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[bed_mesh]
mesh_min: 20,20
mesh_max: 330,330

#####################################################################
#   Displays
#####################################################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5
#   mini12864 LCD Display

[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
#spi_bus: spi1
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

#   To control Neopixel RGB in mini12864 display
[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#   Set RGB values on boot up for each Neopixel. 
#   Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

# Enable object exclusion
[exclude_object]

#####################################################################
#   Added from StealthChanger example printer.cfg
#####################################################################

# Add these to your printer.cfg file
[rounded_path]
resolution: 0.2 # the length of a circle approximation segments.
replace_g0: False # Use at your own risk

[force_move]
enable_force_move: True

[input_shaper]

# Include KAMP config
[include KAMP_Settings.cfg]

# Make a symlink from the tapchanger repo to tapchanger in the
# config directory and include them like this.
[include tapchanger/macros.cfg]
[include tapchanger/homing.cfg] # might need to modify, assumes sensorless
[include tapchanger/tool_detection.cfg]
[include tapchanger/toolchanger-2.4.cfg]

# Include whatever you called the configs for each of your tools.
[include Toolhead_T0.cfg]

#--------------------------------------------------------------------


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 8.975
